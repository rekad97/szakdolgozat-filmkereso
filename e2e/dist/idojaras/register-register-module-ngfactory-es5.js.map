{"version":3,"sources":["webpack:///src/app/register/register-routing.module.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.module.ts"],"names":["routes","path","component","RegisterRoutingModule","RegisterComponent","formBuilder","route","router","userService","authService","loading","submitted","currentUserValue","navigate","registerForm","group","firstName","required","lastName","username","password","minLength","returnUrl","snapshot","queryParams","invalid","register","value","pipe","subscribe","data","error","console","log","controls","RegisterModule"],"mappings":"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","file":"register-register-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nconst routes: Routes = [{\n  path: '',\n  component: RegisterComponent,\n  \n}\n]\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","<div class=\"container\">\r\n    <div class=\"signup_board\">\r\n        <h1>Sign Up</h1>\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" placeholder=\"First Name\" id=\"firstName\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && field.firstName.errors }\" />\r\n                <div *ngIf=\"submitted && field.firstName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"field.firstName.errors.required\">First Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Last Name\" id=\"lastName\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && field.lastName.errors }\" />\r\n                <div *ngIf=\"submitted && field.lastName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"field.lastName.errors.required\">Last Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Username\" formControlName=\"username\" id=\"userName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && field.username.errors }\" />\r\n                <div *ngIf=\"submitted && field.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"field.username.errors.required\">Username is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"password\" placeholder=\"Password\" id=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && field.password.errors }\" />\r\n                <div *ngIf=\"submitted && field.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"field.password.errors.required\">Password is required</div>\r\n                    <div *ngIf=\"field.password.errors.minlength\">Password must be at least 6 characters</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\" id=\"signup\">\r\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n      Register\r\n    </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserService} from '../shared/auth_and_register/user.service';\nimport {first} from 'rxjs/operators';\nimport {AuthService} from '../shared/auth_and_register/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService,\n    private authService: AuthService,\n  ) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get field() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.userService.register(this.registerForm.value)\n      .pipe(first())\n      .subscribe(data => {\n          this.router.navigate(['/login']);\n        },\n        error => {\n        console.log(error);\n        });\n  }\n\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RegisterRoutingModule\n  ]\n})\nexport class RegisterModule { }\n"]}