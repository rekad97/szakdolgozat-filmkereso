{"version":3,"sources":["./src/app/register/register-routing.module.ts","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/register/register.module.ts"],"names":[],"mappings":"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","file":"register-register-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nconst routes: Routes = [{\n  path: '',\n  component: RegisterComponent,\n  \n}\n]\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","<div class=\"container\">\r\n    <div class=\"signup_board\">\r\n        <h1>Sign Up</h1>\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" placeholder=\"First Name\" id=\"firstName\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && field.firstName.errors }\" />\r\n                <div *ngIf=\"submitted && field.firstName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"field.firstName.errors.required\">First Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Last Name\" id=\"lastName\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && field.lastName.errors }\" />\r\n                <div *ngIf=\"submitted && field.lastName.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"field.lastName.errors.required\">Last Name is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Username\" formControlName=\"username\" id=\"userName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && field.username.errors }\" />\r\n                <div *ngIf=\"submitted && field.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"field.username.errors.required\">Username is required</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"password\" placeholder=\"Password\" id=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && field.password.errors }\" />\r\n                <div *ngIf=\"submitted && field.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"field.password.errors.required\">Password is required</div>\r\n                    <div *ngIf=\"field.password.errors.minlength\">Password must be at least 6 characters</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\" id=\"signup\">\r\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n      Register\r\n    </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserService} from '../shared/auth_and_register/user.service';\nimport {first} from 'rxjs/operators';\nimport {AuthService} from '../shared/auth_and_register/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService,\n    private authService: AuthService,\n  ) {\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get field() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.userService.register(this.registerForm.value)\n      .pipe(first())\n      .subscribe(data => {\n          this.router.navigate(['/login']);\n        },\n        error => {\n        console.log(error);\n        });\n  }\n\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RegisterRoutingModule\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///"}