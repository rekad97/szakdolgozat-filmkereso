{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/homepage/add-new-todo-modal/add-new-todo-modal.component.html","webpack:///src/app/homepage/add-new-todo-modal/add-new-todo-modal.component.ts","webpack:///src/app/interceptors/error_interceptor.ts","webpack:///src/app/interceptors/jwt_interceptor.ts","webpack:///src/app/main-layout/main-layout.component.html","webpack:///src/app/main-layout/main-layout.component.ts","webpack:///src/app/models/card.mock.ts","webpack:///src/app/my-profile/qr-code-modal/qr-code-modal.component.html","webpack:///src/app/my-profile/qr-code-modal/qr-code-modal.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/routing/routes.ts","webpack:///src/app/shared/auth_and_register/auth.service.ts","webpack:///src/app/shared/auth_and_register/user.service.ts","webpack:///src/app/shared/movie/movie-details.service.ts","webpack:///src/app/shared/movie/movies.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/todo/todo.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","router","authService","title","currentUser","subscribe","x","logout","navigate","AppModule","AddNewTodoModalComponent","todoService","dialogRef","snackBar","listChanged","formControls","userId","currentUserValue","required","desc","todoForm","valid","create","value","pipe","data","console","log","error","close","open","window","location","reload","Error_interceptor","next","handle","err","status","message","statusText","Jwt_interceptor","token","clone","setHeaders","Authorization","MainLayoutComponent","isLoggedIn","mockMovies","QrCodeModalComponent","moviesService","qrCodeString","getData","reject","getAll","res","result","index","Math","floor","random","length","Title","NavbarComponent","routeReuseStrategy","shouldReuseRoute","mySubscription","events","event","navigated","navigate_login","unsubscribe","m","appRoutes","path","redirectTo","pathMatch","component","children","loadChildren","AuthService","http","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","username","password","post","user","setItem","stringify","removeItem","UserService","get","movie","put","todo","MovieDetailsService","userService","movieService","route","toWatch","resultToSend","undefined","$result","searchMovieByID","getMovieId","toPromise","shared","_value","params","parameters","saveToWatch","MoviesService","mainPageMovies","url","URL","response","imdbID","Year","Runtime","Genre","Actors","Plot","Poster","push","SharedModule","TodoService","environment","production"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<router-outlet></router-outlet>\r\n\r\n","import { Component } from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {AuthService} from './shared/auth_and_register/auth.service';\nimport { User} from './models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'filmadatbazis';\n  currentUser: User;\n  constructor(private router: Router, private authService: AuthService) {\n    this.authService.currentUser.subscribe(x => this.currentUser = x);\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  home(){\n    this.router.navigate(['/home_g']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { StoreModule } from '@ngrx/store';\nimport { SharedModule } from '../app/shared/shared.module'\nimport { AppComponent } from './app.component';\nimport {appRoutes} from '../app/routing/routes';\nimport {Jwt_interceptor} from './interceptors/jwt_interceptor';\nimport {Error_interceptor} from './interceptors/error_interceptor';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    LayoutModule,\n    FlexLayoutModule,\n    NgbModule,\n    StoreModule.forRoot({}, {}),\n    SharedModule\n  ],\n\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: Jwt_interceptor, multi: true},\n    { provide: HTTP_INTERCEPTORS, useClass: Error_interceptor, multi: true},\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div data-backdrop=\"static\" data-keyboard=\"false\">\n    <h1 mat-dialog-title>Add new reminder</h1>\n    <div mat-dialog-content>\n        <form [formGroup]=\"todoForm\" class=\"form\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Title</mat-label>\n                <input matInput formControlName=\"title\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Description</mat-label>\n                <input matInput formControlName=\"desc\">\n            </mat-form-field>\n        </form>\n    </div>\n    <div class=\"buttons\">\n        <button class=\"create-btn\" mat-flat-button (click)=\"create()\">Create</button>\n        <button class=\"cancel-btn\" mat-flat-button (click)=\"cancel()\">Cancel</button>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from 'app/shared/auth_and_register/auth.service';\nimport { TodoService } from 'app/shared/todo/todo.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-new-todo-modal',\n  templateUrl: './add-new-todo-modal.component.html',\n  styleUrls: ['./add-new-todo-modal.component.css']\n})\nexport class AddNewTodoModalComponent implements OnInit {\n\n  @Output() listChanged = new EventEmitter<any>();\n  formControls: Record<keyof any, FormControl> = {\n    userId: new FormControl(this.authService.currentUserValue.id),\n    title: new FormControl('', Validators.required),\n    desc: new FormControl('', Validators.required),\n  };\n\n  todoForm = new FormGroup(this.formControls);\n  constructor(\n    private todoService: TodoService,\n    private authService: AuthService,\n    private dialogRef: MatDialogRef<AddNewTodoModalComponent>,\n    private snackBar: MatSnackBar\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  create() {\n    if (this.todoForm.valid) {\n      this.todoService.create(this.todoForm.value).pipe(first())\n      .subscribe(data => {\n        console.log('data', data);\n        },\n        error => {\n          console.log(error);\n        });\n\n      this.dialogRef.close(this.todoForm.value);\n\n      // this.dialogRef.afterClosed().subscribe(res => {\n      //     this.listChanged.emit(res);\n      //     this.refresh();\n      //   });\n    } else if (!this.todoForm.valid) {\n      this.snackBar.open('Form fields are required!', 'Close');\n    }\n\n }\n  \n\nrefresh() {\n  window.location.reload();\n}\n\ncancel() {\n  this.dialogRef.close();\n}\n\n}\n\n","import { Injectable} from '@angular/core';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {HttpInterceptor, HttpRequest, HttpEvent, HttpHandler} from '@angular/common/http';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {AuthService} from '../shared/auth_and_register/auth.service';\r\n\r\n@Injectable()\r\n// tslint:disable-next-line:class-name\r\nexport class Error_interceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n   return next.handle(req).pipe(catchError(err => {\r\n     if (err.status === 401) {\r\n       this.authService.logout();\r\n       location.reload(true);\r\n     }\r\n     const error = err.error.message || err.statusText;\r\n     return throwError(error);\r\n   }));\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpInterceptor, HttpRequest, HttpEvent, HttpHandler} from '@angular/common/http';\r\n\r\nimport {AuthService} from '../shared/auth_and_register/auth.service';\r\n\r\n@Injectable()\r\nexport class Jwt_interceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let currentUser = this.authService.currentUserValue;\r\n    if(currentUser && currentUser.token) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n}\r\n","<app-navbar [isLoggedIn]=\"isLoggedIn\"></app-navbar>\n<router-outlet></router-outlet>\n<div class=\"container\">\n    <img src=\"assets/hatter_keves.jpg\">\n</div>\n<div class=\"other_container\">\n    <img src=\"assets/hatter_sok.jpg\">\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { getTestBed } from '@angular/core/testing';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from 'app/shared/auth_and_register/auth.service';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.css']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ) {\n      // this.router.routeReuseStrategy.shouldReuseRoute = function() {\n      //   return false;\n      // };\n      // this.mySubscription = this.router.events.subscribe((event) => {\n      //   if (event instanceof NavigationEnd) {\n      //     this.router.navigated = false;\n      //   }\n      // });\n    }\n  isLoggedIn = false;\n  mySubscription: any;\n  ngOnInit(): void {\n    // window.location.reload();\n    if (this.authService.currentUserValue != null) {\n      this.isLoggedIn = true;\n    } else if (this.authService.currentUserValue == null) {\n      this.isLoggedIn = false;\n      // this.router.navigate(['/signup']);\n    }\n    // console.log(\"user\", this.authService.currentUserValue);\n  }\n\n  // ngOnDestroy(): void {\n  //   if (this.mySubscription) {\n  //     this.mySubscription.unsubscribe();\n  //   }\n  // }\n\n}\n","export interface movieCard {\r\n    id: string,\r\n    img: string,\r\n    title: string,\r\n    year: string,\r\n    rate: string\r\n}\r\nexport const mockMovies: movieCard[] = [\r\n\r\n    {\r\n        \"id\": \"1\",\r\n        \"img\": \"assets/images/film.jpg\",\r\n        \"title\": 'No time to die',\r\n        \"year\": \"2020\",\r\n        \"rate\": \"7.6\",\r\n    },\r\n    {\r\n        \"id\": \"1\",\r\n        \"img\": \"assets/images/film.jpg\",\r\n        \"title\": 'No time to die',\r\n        \"year\": \"2020\",\r\n        \"rate\": \"7.6\",\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"img\": \"assets/images/film.jpg\",\r\n        \"title\": 'No time to die',\r\n        \"year\": \"2020\",\r\n        \"rate\": \"7.6\",\r\n    },\r\n    {\r\n        \"id\": \"3\",\r\n        \"img\": \"assets/images/film.jpg\",\r\n        \"title\": 'No time to die',\r\n        \"year\": \"2020\",\r\n        \"rate\": \"7.6\",\r\n    },\r\n    {\r\n        \"id\": \"4\",\r\n        \"img\": \"assets/images/film.jpg\",\r\n        \"title\": 'No time to die',\r\n        \"year\": \"2020\",\r\n        \"rate\": \"7.6\",\r\n    },\r\n    {\r\n        \"id\": \"5\",\r\n        \"img\": \"assets/images/film.jpg\",\r\n        \"title\": 'No time to die',\r\n        \"year\": \"2020\",\r\n        \"rate\": \"7.6\",\r\n    },\r\n\r\n\r\n\r\n]  \r\n","<h1 mat-dialog-title>What should I watch today?</h1>\n<mat-dialog-content class=\"mat-typography\">\n    <qrcode [qrdata]=\"qrCodeString\" [width]=\"256\" [errorCorrectionLevel]=\"'H'\"></qrcode>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close class=\"cancel-btn\">Cancel</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\nimport { MoviesService } from 'app/shared/movie/movies.service';\nimport { Observable, Subject } from 'rxjs';\nimport { first, takeUntil, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-qr-code-modal',\n  templateUrl: './qr-code-modal.component.html',\n  styleUrls: ['./qr-code-modal.component.css']\n})\nexport class QrCodeModalComponent implements OnInit {\n\n  public qrCodeString: string = null;\n  result;\n  constructor(\n    private moviesService: MoviesService\n  ) {}\n\n  ngOnInit(): void {\nthis.getData();\n  }\n\n  async getData(): Promise<Array<any>> {\n    return new Promise((resolve, reject) => {\n      this.moviesService.getAll().subscribe(res =>\n        {\n          this.result = res;\n          console.log(\"result\", this.result);\n          const index = (Math.floor((Math.random() * this.result.length) + 1));\n          this.qrCodeString = this.result[index].Title;\n        }, error => {\n          console.log(error);\n        }\n      );\n     });\n  }\n}\n","<div *ngIf=\"!isLoggedIn\">\r\n    <mat-toolbar class=\"navbar\">\r\n        <button (click)=\"navigate_home()\"><img src=\"assets/images/ujlogo.png\" class=\"logo-btn\" width=\"120\" height=\"42.24\"></button>\r\n        <a mat-button (click)=\"navigate_home()\">Home<i class=\"fas fa-home\"></i></a>\r\n        <div class=\"navbar-right\">\r\n            <button (click)=\"navigate_login()\">Login</button>\r\n            <button (click)=\"navigate_signup()\">Sign Up</button>\r\n        </div>\r\n    </mat-toolbar>\r\n</div>\r\n<div *ngIf=\"isLoggedIn\">\r\n    <mat-toolbar class=\"navbar\">\r\n        <button (click)=\"navigate_home()\"><img src=\"assets/images/ujlogo.png\" class=\"logo-btn\" width=\"120\" height=\"42.24\"></button>\r\n        <a mat-button (click)=\"navigate_home()\">Home<i class=\"fas fa-home\"></i></a>\r\n        <a mat-button (click)=\"navigate_movies()\">Movies<i class=\"fas fa-film\"></i></a>\r\n        <a mat-button (click)=\"navigate_mypage()\">My Page<i class=\"fas fa-list-ul\"></i></a>\r\n        <div class=\"navbar-right\">\r\n            <button (click)=\"navigate_logout()\">Logout</button>\r\n            <button (click)=\"navigate_myprofile()\">My Profile</button>\r\n        </div>\r\n    </mat-toolbar>\r\n\r\n\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {NavigationEnd, Router} from '@angular/router';\nimport { AuthService } from 'app/shared/auth_and_register/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\n  @Input() isLoggedIn: boolean;\n  mySubscription: any;\n  constructor(\n    private router: Router,\n    private authService: AuthService\n    ) {}\n  ngOnInit(): void {\n    this.router.routeReuseStrategy.shouldReuseRoute = function() {\n      return false;\n    };\n    this.mySubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.router.navigated = false;\n      }\n    });\n  }\n  navigate_login() {\n    this.router.navigate(['/login']);\n  }\n  navigate_signup() {\n    this.router.navigate(['/signup']);\n  }\n  navigate_mypage() {\n    this.router.navigate(['/mypage']);\n  }\n  navigate_movies() {\n    this.router.navigate(['/movies']);\n  }\n  navigate_home() {\n    this.router.navigate(['/home']);\n  }\n \n  navigate_logout() {\n    \n    this.authService.logout();\n    this.navigate_login();\n    // window.location.reload()\n    console.log(\"Ő van bent\", this.authService.currentUserValue)\n  }\n  \n  navigate_myprofile() {\n    this.router.navigate(['/myprofile']);\n  }\n\n  ngOnDestroy(): void {\n    if (this.mySubscription) {\n      this.mySubscription.unsubscribe();\n    }\n  }\n\n}","import { Routes } from '@angular/router';\r\nimport { RegisterComponent } from '../register/register.component';\r\nimport { MypageComponent } from '../mypage/mypage.component';\r\nimport { MyProfileComponent } from '../my-profile/my-profile.component';\r\nimport { MovieDetailsComponent } from '../movie-details/movie-details.component';\r\nimport { MoviesComponent } from '../movies/movies.component';\r\nimport { HomepageComponent } from '../homepage/homepage.component';\r\nimport { MainLayoutComponent } from 'app/main-layout/main-layout.component';\r\nimport { Auth } from '../../../auth';\r\nexport const appRoutes: Routes = [\r\n  // {\r\n  //   path: 'signup', component: RegisterComponent,\r\n  //   children: [{ path: '', component: RegisterComponent }],\r\n  // },\r\n  // {\r\n  //   path: 'login', component: LoginComponent\r\n  // },\r\n  // {\r\n  //   path: 'mypage', component: MypageComponent,\r\n  // },\r\n  //  {\r\n  //   path: 'home', component: HomepageComponent\r\n  // },\r\n  // {\r\n  //   path: 'myprofile', component: MyProfileComponent\r\n  // },\r\n  // {\r\n  //   path: 'movies', component: MoviesComponent\r\n  // },\r\n  {\r\n    path: '', redirectTo: '/signup', pathMatch: 'full'\r\n  },\r\n  // {\r\n  //   path: 'movie/:id',  component: MovieDetailsComponent\r\n  // },\r\n  {\r\n    path: '', component: MainLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        loadChildren: () => import('../login/login.module').then((m) => m.LoginModule),\r\n      },\r\n      {\r\n        path: 'home',\r\n        loadChildren: () => import('../homepage/homepage.module').then((m) => m.HomepageModule),\r\n      },\r\n      {\r\n        path: 'movie/:id',\r\n        loadChildren: () => import('../movie-details/movie-details.module').then((m) => m.MovieDetailsModule),\r\n      },\r\n      {\r\n        path: 'movies',\r\n        loadChildren: () => import('../movies/movies.module').then((m) => m.MoviesModule),\r\n      },\r\n      {\r\n        path: 'myprofile',\r\n        loadChildren: () => import('../my-profile/my-profile.module').then((m) => m.MyProfileModule),\r\n      },\r\n      {\r\n        path: 'mypage',\r\n        loadChildren: () => import('../mypage/mypage.module').then((m) => m.MypageModule),\r\n      },\r\n      {\r\n        path: 'signup',\r\n        loadChildren: () => import('../register/register.module').then((m) => m.RegisterModule),\r\n      },\r\n    ]\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, BehaviorSubject} from 'rxjs';\nimport {User} from '../../models/user';\nimport {map} from 'rxjs/operators';\n// import {db} from 'app/database/db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n\n  login(username, password) {\n    return this.http.post<any>(`http://localhost:3000/users/auth`, { username, password})\n      .pipe(map(user => {\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {User} from '../../models/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    console.log('proba getAll');\n    return this.http.get<User[]>(`http://localhost:3000/users`);\n  }\n\n  getById(id) {\n    console.log('proba getId');\n    return this.http.get(`http://localhost:3000/users/${id}`);\n  }\n\n  register(user: User) {\n    return this.http.post(`http://localhost:3000/users/register`, user);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`http://localhost:3000/users/${id}`);\n  }\n\n  saveToWatch(movie: any) {\n    return this.http.post(`http://localhost:3000/users/towatch`, movie);\n  }\n\n  updateToWatch(id, movie: any) {\n    console.log('update ideér');\n    return this.http.put(`http://localhost:3000/users/toWatch/${id}`, movie);\n  }\n  updateContinue(id, movie: any) {\n    console.log('update ideér');\n    return this.http.put(`http://localhost:3000/users/continue/${id}`, movie);\n  }\n  updateAlreadyWatched(id, movie: any) {\n    console.log('update ideér');\n    return this.http.put(`http://localhost:3000/users/alreadyWatched/${id}`, movie);\n  }\n  updateToDoList(id, todo: any) {\n    console.log('update ideér');\n    return this.http.put(`http://localhost:3000/users/toDoList/${id}`, todo);\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {MoviesService} from './movies.service';\nimport {ActivatedRoute, ActivatedRouteSnapshot, Params, Router} from '@angular/router';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from '../auth_and_register/auth.service';\nimport {UserService} from '../auth_and_register/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieDetailsService {\n  toWatch: any[] = [];\n  toWatchToSend: any;\n  sharedToWatch: any;\n  continue: any[];\n  alreadyWatched: any[];\nresult: any;\n  id: number;\n resultToSend: any = undefined;\nshared: any;\n  constructor(private authService: AuthService, private userService: UserService, private http: HttpClient, private movieService: MoviesService, private route: ActivatedRoute, private router: Router) {\n    console.log(this.result);\n\n  }\n$result = new EventEmitter();\n   async init() {\n   await this.movieService.searchMovieByID(this.getMovieId()).toPromise().then((result) => {\n    //  console.log(this.getMovieId());\n      this.result = [result];\n      this.resultToSend =  new BehaviorSubject(this.result);\n      this.shared = this.resultToSend.asObservable();\n      console.log(this.resultToSend);\n      console.log(this.resultToSend._value[0].Title);\n    });\n  }\n  sendData() {\n   // this.resultToSend =  new BehaviorSubject(this.result);\n   // this.shared = this.resultToSend.asObservable();\n    return this.resultToSend;\n  }\n  setData() {\n    this.resultToSend = this.result;\n\n  }\n    getMovieId() {\n      let id = 0;\n      console.log(this.route);\n      this.route.params.subscribe((parameters: Params) => {\n        id = parameters['id'];\n        console.log(id);\n      });\n      return id;\n    }\n\n  addToWatch() {\n     console.log(this.userService.saveToWatch(this.result[0]));\nconsole.log(this.result);\n     this.router.navigate(['/mypage']);\n   // this.toWatch.push(this.result);\n   // this.toWatchToSend = new BehaviorSubject(this.toWatch);\n  // this.sharedToWatch = this.toWatchToSend.asObservable();\n //  console.log(this.sharedToWatch);\n  //  console.log(this.toWatch[0]);\n       }\n\n\nnextResult(result: any) {\n    this.resultToSend.next(result);\n}\n  getResult(): Observable<any>{\n    return this.resultToSend.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {delay, map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport { of } from 'rxjs';\nimport {Movie} from '../../models/movie';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport { mockMovies } from 'app/models/card.mock';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n  movie: any;\n  selectedMovie: Movie;\n  mainPageMovies: Movie[] = [];\n  URL;\n\n  constructor(\n    private http: HttpClient\n    ) {}\n\nsearchMovieByTitle(title: string) {\nconst url = 'http://cors-anywhere.herokuapp.com/http://www.omdbapi.com/?s=' + title + '&apikey=7b464f43';\nthis.URL = url;\nreturn this.http.get(url).pipe(map((response => {\n    this.movie = response;\n    return response;\n  })));\n\n}\n  searchMovieByID(id: number) {\n    const url = 'http://cors-anywhere.herokuapp.com/http://www.omdbapi.com/?i=' + id + '&apikey=7b464f43';\n    this.URL = url;\n    return this.http.get(url).pipe(map((response => {\n      this.movie = response;\n      return response;\n    })));\n\n  }\n\n  getMovie(id) {\n    return of({\n      imdbID: id,\n      Title: this.movie.Title,\n      Year: this.movie.Year,\n      Runtime: this.movie.Runtime,\n      Genre: this.movie.Genre,\n      Actors: this.movie.Actors,\n      Plot: this.movie.Plot,\n      Poster: this.movie.Poster\n    });\n  }\n\n  getMockCardDatas(): Observable<any> {\n    return of(mockMovies);\n  }\n\n  addMainPageMovie(movie: Movie) {\n    this.mainPageMovies.push(movie);\n  }\n\n  save(movie: Movie) {\n    console.log(\"save\", movie);\n    return this.http.post(`http://localhost:3000/movies/saveMovie`, movie);\n\n  }\n\n  getById(id) {\n    return this.http.get(`http://localhost:3000/movies/${id}`);\n  }\n\n  getAll() {\n    return this.http.get<Movie[]>(`http://localhost:3000/movies`);\n  }\n\n  saveToWatch(movie) {\n    return this.http.post(`http://localhost:3000/movies/saveToWatch`, movie);\n  }\n\n  saveContinue(movie) {\n    return this.http.post(`http://localhost:3000/movies/saveContinue`, movie);\n  }\n\n  saveAlreadyWatched(movie) {\n    return this.http.post(`http://localhost:3000/movies/saveAlreadyWatched`, movie);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MovieDetailsService} from '../shared/movie/movie-details.service';\nimport { MoviesComponent } from '../movies/movies.component';\nimport {HomepageComponent} from '../homepage/homepage.component';\nimport { RegisterComponent } from 'app/register/register.component';\nimport { NavbarComponent } from 'app/navbar/navbar.component';\nimport { MypageComponent } from 'app/mypage/mypage.component';\nimport { MyProfileComponent } from 'app/my-profile/my-profile.component';\nimport { MovieDetailsComponent } from 'app/movie-details/movie-details.component';\nimport { MainLayoutComponent } from 'app/main-layout/main-layout.component';\nimport { MoviesService } from './movie/movies.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { RouterModule } from '@angular/router';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { QrCodeModalComponent } from '../my-profile/qr-code-modal/qr-code-modal.component';\nimport { AddNewTodoModalComponent } from '../homepage/add-new-todo-modal/add-new-todo-modal.component';\nimport { TodoCardComponent } from '../homepage/todo-card/todo-card.component';\n\n@NgModule({\n  declarations: [\n    // HomepageComponent,\n    // RegisterComponent,\n    TodoCardComponent,\n    NavbarComponent,\n    // MypageComponent,\n    // MyProfileComponent,\n    // MovieDetailsComponent,\n    // MoviesComponent,\n    MainLayoutComponent,\n    QrCodeModalComponent,\n    AddNewTodoModalComponent\n    \n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    DragDropModule,\n    MatMenuModule,\n    MatTableModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    QRCodeModule\n  ],\n  exports: [\n    // HomepageComponent,\n    // RegisterComponent,\n    NavbarComponent,\n    // MypageComponent,\n    // MyProfileComponent,\n    // MovieDetailsComponent,\n    // MoviesComponent,\n    TodoCardComponent,\n    MainLayoutComponent,\n    QrCodeModalComponent,\n    AddNewTodoModalComponent,\n    FormsModule, \n    MatSnackBarModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    DragDropModule,\n    MatMenuModule,\n    MatTableModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [\n    MoviesService,\n    MovieDetailsService\n  ],\n  entryComponents: [QrCodeModalComponent, AddNewTodoModalComponent]\n})\nexport class SharedModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToDo } from 'app/models/todo';\nimport { User } from 'app/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<ToDo[]>(`http://localhost:3000/todos`);\n  }\n  getById(id) {\n    return this.http.get(`http://localhost:3000/todos/${id}`);\n  }\n\n  create(todo: ToDo) {\n    return this.http.post(`http://localhost:3000/todos/create`, todo);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`http://localhost:3000/todos/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}