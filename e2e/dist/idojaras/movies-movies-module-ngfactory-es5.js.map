{"version":3,"sources":["webpack:///src/app/movies/movies-routing.module.ts","webpack:///src/app/movies/movies.component.html","webpack:///src/app/movies/movies.component.ts","webpack:///src/app/movies/movies.module.ts","webpack:///src/app/shared/movie/latest-search.service.ts"],"names":["routes","path","component","MoviesRoutingModule","MoviesComponent","movieService","router","latestSearchService","result","displayedColumns","searched","title","searchMovieByTitle","subscribe","console","log","Search","latestSearchTitle","push","navigate","movie","selectedMovie","JSON","stringify","navigate_movie_detail","imdbID","MoviesModule","LatestSearchService"],"mappings":"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","file":"movies-movies-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MoviesComponent } from './movies.component';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nconst routes: Routes = [{\n  path: '',\n  component: MoviesComponent,\n  \n}\n]\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class MoviesRoutingModule { }\n","<div *ngIf=\"searched===false\">\n    <h1>Search for movies!</h1>\n    <div class=\"search-bar\">\n        <input type=\"text\" [(ngModel)]=\"title\" placeholder=\"Search...\" class=\"search-form\" />\n        <button type=\"submit\" (click)=\"searchMovie(title)\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i></button>\n    </div>\n</div>\n\n<div class=\"list\" *ngIf=\"searched===true\">\n    <table>\n        <tr *ngFor=\"let movie of result\" [routerLink]=\"['/movie', movie.imdbID]\">\n            <td>{{movie.Title}}</td>\n            <td>{{movie.Year}}</td>\n            <td><img [src]=movie.Poster width=\"50\" height=\"70\"></td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Movie} from '../models/movie';\nimport {MoviesService} from '../shared/movie/movies.service';\nimport {Router} from '@angular/router';\nimport { LatestSearchService } from 'app/shared/movie/latest-search.service';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent implements OnInit {\n\n\n  title: string;\n  result: any = [];\n  selectedMovie: Movie;\n  displayedColumns: string[] = ['title', 'year', 'poster'];\n  searched: boolean = false;\n  searchMovie(title: string) {\n    this.movieService.searchMovieByTitle(title).subscribe((result: any) => {\n      console.log(result);\n      this.result = result.Search;\n      this.title = title;\n      console.log(this.title);\n      this.latestSearchService.latestSearchTitle.push(this.result);\n    });\n    this.searched = true;\n  }\n  constructor(private movieService: MoviesService, private router: Router, private latestSearchService: LatestSearchService) { }\n\n  ngOnInit(): void {\n  }\n\n  navigate_movie_detail() {\n    this.router.navigate(['/movie/:id']);\n  }\n  select(movie: Movie) {\n    this.selectedMovie = movie;\n    console.log(`selectedMovie = ${JSON.stringify(this.selectedMovie)}`);\n    this.navigate_movie_detail();\n  }\ndetails(movie){\n    this.router.navigate(['/movie', movie.imdbID]);\n}\nnavigate() {\n  this.router.navigate(['/card']);\n\n}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { MoviesComponent } from './movies.component';\nimport { MoviesRoutingModule } from './movies-routing.module';\n\n\n@NgModule({\n  declarations: [MoviesComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MoviesRoutingModule\n  ]\n})\nexport class MoviesModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LatestSearchService {\n\n  latestSearchTitle: string[] = [];\n  constructor() { }\n}\n"]}